version: '2.1'

services:
  nodejs:
    image: nosa-cms
    build: .
    environment:
      NODE_ENV: production
      
  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      - nodejs
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email thientt@kyc.net.vn --agree-tos --no-eff-email --staging -d ttt.vaytieudungtheoluong247.com  -d www.ttt.vaytieudungtheoluong247.com
  app:
    build:
      context: .
    command: >
      sh -c " chmod +x /home/ec2-user/nosa-cms/cron_ssl.sh
              docker-compose stop webserver
              mkdir dhparam
              sudo openssl dhparam -out /home/ec2-user/nosa-cms/dhparam/dhparam-2048.pem 2048
              rm /home/ec2-user/nosa-cms/nginx-conf/nginx.conf
              mv /home/ec2-user/nosa-cms/ssl.conf /home/ec2-user/nosa-cms/nginx_conf/
              docker-compose up -d --force-recreate --no-deps webserver"
volumes:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /home/ec2-user/nosa-cms/public/
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /home/ec2-user/nosa-cms/dhparam/
      o: bind

networks:
  app-network:
    driver: bridge